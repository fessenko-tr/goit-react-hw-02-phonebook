{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/Contact/Contact.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","submitNewContact","preventDefault","props","addNewContact","clearForm","onSubmit","this","className","s","form","label","htmlFor","input","type","id","pattern","title","required","onChange","Component","Contact","deleteFunction","listItem","listBtn","onClick","ContactList","contactsList","deleteContactBtn","contacts","map","Filter","updateFilterFunc","App","filter","current","find","el","shortid","generate","alert","deleteContact","updateFilter","getFilteredContacs","toLowerCase","includes","contactsToShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91666ff4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2l3FS\",\"input\":\"Filter_input__EzzwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZpmLA\",\"label\":\"ContactForm_label__1lcpO\",\"input\":\"ContactForm_input__2N4qB\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  static propTypes = {\r\n    addNewContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(() => ({ [name]: value }));\r\n  };\r\n\r\n  submitNewContact = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.addNewContact(name, number);\r\n    this.clearForm();\r\n  };\r\n\r\n  clearForm = () => {\r\n    this.setState(() => ({ name: \"\", number: \"\" }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitNewContact} className={s.form}>\r\n        <label className={s.label} htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        />\r\n        <label className={s.label} htmlFor=\"number\">\r\n          Number\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Contact.module.css\";\r\n\r\nfunction Contact({ id, name, number, deleteFunction }) {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <p>{`${name}: ${number}`}</p>\r\n      <button\r\n        className={s.listBtn}\r\n        onClick={() => {\r\n          deleteFunction(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteFunction: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import Contact from \"../Contact\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ContactList({ contactsList, deleteContactBtn }) {\r\n  const contacts = contactsList.map(({ id, name, number }) => (\r\n    <Contact\r\n      key={id}\r\n      id={id}\r\n      name={name}\r\n      number={number}\r\n      deleteFunction={deleteContactBtn}\r\n    />\r\n  ));\r\n\r\n  return <ul>{contacts}</ul>;\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteContactBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ value, updateFilterFunc }) {\r\n  return (\r\n    <>\r\n      <label className={s.label} htmlFor=\"filter\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className={s.input}\r\n        id=\"filter\"\r\n        value={value}\r\n        onChange={updateFilterFunc}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  updateFilterFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport shortid from \"shortid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addNewContact = (name, number) => {\n    const { contacts } = this.state;\n\n    this.setState((current) => {\n      if (contacts.find((el) => el.name === name)) {\n        alert(`${name} is already in contacts.`);\n        return;\n      }\n      return {\n        contacts: [\n          ...current.contacts,\n          { id: shortid.generate(), name, number },\n        ],\n      };\n    });\n  };\n\n  deleteContact = (id) => {\n    const { contacts } = this.state;\n\n    this.setState({ contacts: contacts.filter((el) => el.id !== id) });\n  };\n\n  updateFilter = (e) => {\n    const value = e.currentTarget.value;\n    this.setState(() => ({ filter: value }));\n  };\n\n  getFilteredContacs = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((e) => {\n      return e.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  render() {\n    const contactsToShow = this.getFilteredContacs();\n    const { filter } = this.state;\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm addNewContact={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} updateFilterFunc={this.updateFilter} />\n        <ContactList\n          contactsList={contactsToShow}\n          deleteContactBtn={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__1n50V\",\"listBtn\":\"Contact_listBtn__3040N\"};"],"sourceRoot":""}