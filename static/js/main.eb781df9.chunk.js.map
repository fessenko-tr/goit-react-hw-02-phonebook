{"version":3,"sources":["ContactForm/ContactForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","submitNewContact","preventDefault","props","addNewContact","clearForm","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","list","btnDelete","contacts","map","id","onClick","Filter","func","App","filter","addContact","prev","find","shortid","generate","alert","deleteContact","updateFilter","getFiltered","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb781df9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState(() => ({ [name]: value }));\r\n  };\r\n\r\n  submitNewContact = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.addNewContact(name, number);\r\n    this.clearForm();\r\n  };\r\n\r\n  clearForm = () => {\r\n    this.setState(() => ({ name: \"\", number: \"\" }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitNewContact}>\r\n        <label>\r\n          NAME\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label>\r\n          PHONE\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","function ContactList({ list, btnDelete }) {\r\n  const contacts = list.map(({ id, name, number }) => (\r\n    <li key={id}>\r\n      <p>{`${name}: ${number}`}</p>\r\n      <button\r\n        onClick={() => {\r\n          btnDelete(id);\r\n        }}\r\n      >\r\n        DELETE\r\n      </button>\r\n    </li>\r\n  ));\r\n\r\n  return <ul>{contacts}</ul>;\r\n}\r\n\r\nexport default ContactList;\r\n","function Filter({ value, func }) {\r\n  return (\r\n    <label>\r\n      Find contact by name\r\n      <input value={value} onChange={func} />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport shortid from \"shortid\";\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    this.setState((prev) => {\n      if (this.state.contacts.find((e) => e.name === name)) {\n        alert(`${name} is already in contacts.`);\n        return;\n      }\n      return {\n        contacts: [...prev.contacts, { id: shortid.generate(), name, number }],\n      };\n    });\n  };\n\n  deleteContact = (id) => {\n    this.setState({ contacts: this.state.contacts.filter((e) => e.id !== id) });\n  };\n\n  updateFilter = (e) => {\n    const value = e.currentTarget.value;\n    this.setState(() => ({ filter: value }));\n  };\n\n  getFiltered = () => {\n    return this.state.contacts.filter((e) => {\n      return e.name.toLowerCase().includes(this.state.filter.toLowerCase());\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <ContactForm addNewContact={this.addContact} />\n        <Filter value={this.state.filter} func={this.updateFilter} />\n        <ContactList list={this.getFiltered()} btnDelete={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}